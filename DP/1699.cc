#include <bits/stdc++.h>

// 주어진 자연수 N을  제곱수들의 합으로 표현할 때에 그 항의 최소 갯수를 구하는 문제
// 예를 들어, 11=3^2+1^2+1^2(3개 항)과 11=2^2+2^2+1^2+1^2+1^2(5개 항)이 가능한데, 이 경우 3개 항이 최소 갯수를 가짐 

// DP 배열에는 제곱수들의 합으로 표현할 때의 최소 항의 갯수를 저장함
int DP[100001];

int main() {
	int N;
	std::cin >> N;

	for (int i = 1; i <= N; ++i) {
		// 모든 수는 1^2를 i만큼 더한 형태로 표현할 수 있으므로, 초기값은 i로 설정
		DP[i] = i;

		// 가능한 모든 제곱수 j^2 (1^2, 2^2, …, floor(sqrt(i))^2)를 시도하며 최솟값 갱신
		for(int j = 1; j * j <= i; ++j) {
			// j^2를 한 번 사용한다고 가정하면, 남은 값 i - j^2를 만드는 최소 항 개수는 DP[i - j^2]
		    // 여기에 j^2 연산 하나를 더해 후보값을 만들고, 그 중 최솟값을 선택함
			DP[i] = std::min(DP[i], DP[i - j * j] + 1);
		}
	}

	std::cout << DP[N];
	return 0;
}