#include <iostream>

// 정수 n이 있을 때, n을 1,2,3의 합으로 나타내는 방법의 수를 구하는 문제
// 합을 나타낼 때는 수를 1개 이상 사용해야 하며, 합을 이루고 있는 수의 순서만 다른 것은 같은 것으로 취급함

// DP[n][m] : n을 (m + 1)이하의 숫자들로 나타낼 수 있는 조합의 수
// e.g. DP[5][2] : 5를 3이하의 숫자들로 나타낼 수 있는 조합의 수
int DP[10001][3];

int main() {
	int T;
	std::cin >> T;

	DP[1][0] = 1;
	DP[2][0] = 1;
	DP[2][1] = 1;
	DP[3][0] = 1;
	DP[3][1] = 1;
	DP[3][2] = 1;

	/*
		n을 다른 숫자들로 구성된 1,2,3의 합으로 나타내는 경우의 수는 아래와 같다
		- 1로만 구성된 경우 : 한 개만 존재함. 정확히는 (n - 1)의 갯수를 따라감(기존 경우에서 1만 더하면 되기 때문)
		- 1과 2로만 구성된 경우 : (n - 2)에서 1로만 이루어진 경우의 수 + (n - 2)에서 1과 2로만 이루어진 경우의 수
		- 1,2,3으로 구성된 경우 : (n - 3)에서 1로만 이루어진 경우의 수 + (n - 3)에서 1과 2로만 이루어진 경우의 수 + (n - 3)에서 1,2,3으로 이루어진 경우의 수
	*/

	for (int i = 4; i < 10001; i++) {
		DP[i][0] = 1;
		DP[i][1] = DP[i - 2][0] + DP[i - 2][1];
		DP[i][2] = DP[i - 3][0] + DP[i - 3][1] + DP[i - 3][2];
	}

	while (T--) {
		int n;
		std::cin >> n;
		std::cout << DP[n][0] + DP[n][1] + DP[n][2] << '\n';
	}

	return 0;
}